<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xhg.ops.system.dao.OpsSystemUserRoleDao">
	<resultMap id="BaseResultMap" type="com.xhg.ops.system.model.OpsSystemUserRole">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="role_id" property="roleId" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="created_user_Id" property="createdUserId"
			jdbcType="INTEGER" />
		<result column="updated_user_id" property="updatedUserId"
			jdbcType="INTEGER" />
		<result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
		<result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
		<result column="enable" property="enable" jdbcType="BIT" />
	</resultMap>

	<sql id="Base_Column_List">
		id, role_id, user_id, created_user_Id, updated_user_id, created_time,
		updated_time, enable
	</sql>

	<!-- 查询条件 -->
	<sql id="Where_Clause">
		where 1=1 and enable=1
		<trim suffixOverrides=",">
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="roleId != null and roleId != ''">
				and role_id = #{roleId}
			</if>
			<if test="userId != null and userId != ''">
				and user_Id = #{userId}
			</if>
			<if test="createdTime != null">
				and created_time = #{createdTime}
			</if>
			<if test="updatedTime != null">
				and updated_time = #{updatedTime}
			</if>
			<if test="createdUserId != null">
				and created_user_id = #{createdUserId}
			</if>
			<if test="updatedUserId != null">
				and updated_user_id = #{updatedUserId}
			</if>
		</trim>
	</sql>


	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_ops_bu_system_user_role
		where id = #{id,jdbcType=INTEGER}
	</select>

	<!-- ${codeName} 列表总数 -->
	<select id="queryAllCount" resultType="java.lang.Integer"
		parameterType="com.xhg.ops.system.model.OpsSystemUserRole">
		select COUNT(1)
		from t_ops_bu_system_user_role
		<include refid="Where_Clause" />
	</select>

	<!-- 查询${codeName}列表 -->
	<select id="queryAllList" resultMap="BaseResultMap"
		parameterType="com.xhg.ops.system.model.OpsSystemUserRole">
		select
		<include refid="Base_Column_List" />
		from t_ops_bu_system_user_role
		<include refid="Where_Clause" />
	</select>

	<update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		update t_ops_bu_system_user_role set enable=0
		where id = #{id,jdbcType=INTEGER}
	</update>

	<insert id="insertSelective" parameterType="com.xhg.ops.system.model.OpsSystemUserRole">
		insert into t_ops_bu_system_user_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="roleId != null">
				role_id,
			</if>
			<if test="userId != null">
				user_Id,
			</if>
			<if test="createdUserId != null">
				created_user_Id,
			</if>
			<if test="updatedUserId != null">
				updated_user_id,
			</if>
			<if test="createdTime != null">
				created_time,
			</if>
			<if test="updatedTime != null">
				updated_time,
			</if>
			<if test="enable != null">
				enable,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="createdUserId != null">
				#{createdUserId,jdbcType=INTEGER},
			</if>
			<if test="updatedUserId != null">
				#{updatedUserId,jdbcType=INTEGER},
			</if>
			<if test="createdTime != null">
				#{createdTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedTime != null">
				#{updatedTime,jdbcType=TIMESTAMP},
			</if>
			<if test="enable != null">
				#{enable,jdbcType=BIT},
			</if>
		</trim>
	</insert>

	<update id="updateRoleByUserId" parameterType="com.xhg.ops.system.model.OpsSystemUserRole">
		UPDATE t_ops_bu_system_user_role SET role_id = #{roleId} WHERE user_id=#{userId}
	</update>

	<update id="updateByPrimaryKeySelective" parameterType="com.xhg.ops.system.model.OpsSystemUserRole">
		update t_ops_bu_system_user_role
		<set>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				user_Id = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="createdUserId != null">
				created_user_Id = #{createdUserId,jdbcType=INTEGER},
			</if>
			<if test="updatedUserId != null">
				updated_user_id = #{updatedUserId,jdbcType=INTEGER},
			</if>
			<if test="createdTime != null">
				created_time = #{createdTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedTime != null">
				updated_time = #{updatedTime,jdbcType=TIMESTAMP},
			</if>
			<if test="enable != null">
				enable = #{enable,jdbcType=BIT},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.xhg.ops.system.model.OpsSystemUserRole">
		update t_ops_bu_system_user_role
		set role_id = #{roleId,jdbcType=VARCHAR},
		user_Id = #{userId,jdbcType=VARCHAR},
		created_user_Id = #{createdUserId,jdbcType=INTEGER},
		updated_user_id = #{updatedUserId,jdbcType=INTEGER},
		created_time = #{createdTime,jdbcType=TIMESTAMP},
		updated_time = #{updatedTime,jdbcType=TIMESTAMP},
		enable = #{enable,jdbcType=BIT}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<update id="deleteByUserId" parameterType="java.lang.Integer">
		UPDATE t_ops_bu_system_user_role SET ENABLE=0 WHERE user_id=#{userId}
	</update>

	<resultMap id="BaseResultUserRoleMap" type="com.xhg.ops.system.entity.SystemUserDO">

		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<collection property="roleDOs" column="user_id"
			ofType="com.xhg.ops.system.entity.SystemRoleDO">
			<result column="role_id" property="roleId" jdbcType="INTEGER" />
			<result column="role_code" property="roleCode" />
			<result column="name" property="roleName"/>
		</collection>

	</resultMap>

	<select id="selectByUserRoleList" resultMap="BaseResultUserRoleMap">
		SELECT
		ur.role_id,
		ur.user_id,
		r.role_code,
		r.name
		FROM
		t_ops_bu_system_user_role ur
		LEFT JOIN t_ops_bu_system_role r on ur.role_id=r.id
		WHERE
		ur.ENABLE =1
		and r.`enable`=1
	</select>
</mapper>